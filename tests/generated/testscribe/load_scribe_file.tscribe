format_version: 1
module: testscribe.load_scribe_file
tests:
- name: test_get_named_value_element_value_value_key_is_required
  short_name: _value_key_is_required
  target:
    name: get_named_value_element_value
  parameters:
  - name: d
    value: {}
  exception:
    type: KeyError
    message: '''value'''
- name: test_get_named_value_element_value
  short_name: _
  target:
    name: get_named_value_element_value
  parameters:
  - name: d
    value:
      value: 1
  result: 1
- name: test_load_exception_internal
  short_name: _
  target:
    name: load_exception_internal
  parameters:
  - name: d
    value:
      type: a
      message: b
  result: !testscribe/object
    type: testscribe.model_type.ExceptionModel
    repr: ExceptionModel(type='a', message='b')
- name: test_load_exception_internal_type_is_required
  short_name: _type_is_required
  target:
    name: load_exception_internal
  parameters:
  - name: d
    value: {}
  exception:
    type: KeyError
    message: '''type'''
- name: test_load_exception_internal_message_is_required
  short_name: _message_is_required
  target:
    name: load_exception_internal
  parameters:
  - name: d
    value:
      type: a
  exception:
    type: KeyError
    message: '''message'''
- name: test_load_exception_model
  short_name: _
  target:
    name: load_exception_model
  parameters:
  - name: d
    value:
      exception:
        type: a
        message: b
  result: !testscribe/object
    type: testscribe.model_type.ExceptionModel
    repr: ExceptionModel(type='a', message='b')
- name: test_load_exception_model_no_exception
  short_name: _no_exception
  target:
    name: load_exception_model
  parameters:
  - name: d
    value: {}
  result: null
- name: test_load_mock_attributes_no_attribute
  short_name: _no_attribute
  target:
    name: load_mock_attributes
  parameters:
  - name: m
    value: {}
  result: {}
- name: test_load_mock_attributes_has_attribute
  short_name: _has_attribute
  target:
    name: load_mock_attributes
  parameters:
  - name: m
    value:
      attributes:
        a: 1
  result:
    a: 1
- name: test_load_mock_call_model_default
  short_name: _default
  target:
    name: load_mock_call_model
  parameters:
  - name: c
    value: {}
  result: !testscribe/object
    type: testscribe.model_type.MockCallModel
    repr: MockCallModel(name='', parameters=NamedValues([]), return_value=None)
- name: test_load_mock_call_model
  short_name: _
  target:
    name: load_mock_call_model
  parameters:
  - name: c
    value:
      name: n
      parameters:
      - name: a
        value: 1
      return: 3
  result: !testscribe/object
    type: testscribe.model_type.MockCallModel
    repr: MockCallModel(name='n', parameters=NamedValues([('a', 1)]), return_value=3)
- name: test_load_mock_calls_has_call
  short_name: _has_call
  target:
    name: load_mock_calls
  parameters:
  - name: m
    value:
      calls:
      - name: n
        parameters:
        - name: a
          value: 1
        return: 3
      - {}
  result:
  - !testscribe/object
    type: testscribe.model_type.MockCallModel
    repr: MockCallModel(name='n', parameters=NamedValues([('a', 1)]), return_value=3)
  - !testscribe/object
    type: testscribe.model_type.MockCallModel
    repr: MockCallModel(name='', parameters=NamedValues([]), return_value=None)
- name: test_load_mock_calls_no_call
  short_name: _no_call
  target:
    name: load_mock_calls
  parameters:
  - name: m
    value: {}
  result: []
- name: test_load_mock_model_name_is_required
  short_name: _name_is_required
  target:
    name: load_mock_model
  parameters:
  - name: m
    value: {}
  exception:
    type: KeyError
    message: '''name'''
- name: test_load_mock_model_spec_is_required
  short_name: _spec_is_required
  target:
    name: load_mock_model
  parameters:
  - name: m
    value:
      name: m
  exception:
    type: KeyError
    message: '''spec'''
- name: test_load_mock_model
  short_name: _
  target:
    name: load_mock_model
  parameters:
  - name: m
    value:
      name: m
      spec: s
  result: !testscribe/object
    type: testscribe.model_type.MockModel
    repr: MockModel(name='m', spec_str='s', calls=[], attributes={})
- name: test_load_mocks
  short_name: _
  target:
    name: load_mocks
  parameters:
  - name: d
    value:
      mocks:
      - name: m
        spec: s
      - name: m1
        spec: s1
  result:
  - !testscribe/object
    type: testscribe.model_type.MockModel
    repr: MockModel(name='m', spec_str='s', calls=[], attributes={})
  - !testscribe/object
    type: testscribe.model_type.MockModel
    repr: MockModel(name='m1', spec_str='s1', calls=[], attributes={})
- name: test_load_mocks_no_mock
  short_name: _no_mock
  target:
    name: load_mocks
  parameters:
  - name: d
    value: {}
  result: []
- name: test_load_model
  short_name: _
  target:
    name: load_model
  parameters:
  - name: d
    value:
      module: mod
      tests:
      - name: t
        short_name: st
        target:
          name: f
      - name: t1
        short_name: st1
        target:
          name: f1
  result: !testscribe/object
    type: testscribe.model_type.AllTests
    repr: 'AllTests(tests=[TestModel(name=''t'', short_name=''st'', description='''',
      target_func_name=''f'', target_class_name='''', init_parameters=NamedValues([]),
      parameters=NamedValues([]), exception=None, result=None, mocks=[], patches=[]),
      TestModel(name=''t1'', short_name=''st1'', description='''', target_func_name=''f1'',
      target_class_name='''', init_parameters=NamedValues([]), parameters=NamedValues([]),
      exception=None, result=None, mocks=[], patches=[])], module=''mod'', name_to_index={''t'':
      0, ''t1'': 1})'
- name: test_load_named_values_missing_key
  short_name: _missing_key
  target:
    name: load_named_values
  parameters:
  - name: d
    value: {}
  - name: key_name
    value: k
  result: !testscribe/object
    type: testscribe.namedvalues.NamedValues
    repr: NamedValues([])
- name: test_load_named_values
  short_name: _
  target:
    name: load_named_values
  parameters:
  - name: d
    value:
      k:
      - value: 1
      - name: b
        value: 2
  - name: key_name
    value: k
  result: !testscribe/object
    type: testscribe.namedvalues.NamedValues
    repr: NamedValues([('', 1), ('b', 2)])
- name: test_load_one_patch_target_key_is_required
  short_name: _target_key_is_required
  target:
    name: load_one_patch
  parameters:
  - name: d
    value: {}
  exception:
    type: KeyError
    message: '''target'''
- name: test_load_one_patch_replacement_key_is_required
  short_name: _replacement_key_is_required
  target:
    name: load_one_patch
  parameters:
  - name: d
    value:
      target: a
  exception:
    type: KeyError
    message: '''replacement'''
- name: test_load_one_patch
  short_name: _
  target:
    name: load_one_patch
  parameters:
  - name: d
    value:
      target: a
      replacement: 1
  result: !testscribe/object
    type: testscribe.model_type.PatchModel
    repr: PatchModel(target='a', replacement=1)
- name: test_load_optional_name_key_value_no_key
  short_name: _no_key
  target:
    name: load_optional_name_key_value
  parameters:
  - name: d
    value: {}
  result: ''
- name: test_load_optional_name_key_value_has_key
  short_name: _has_key
  target:
    name: load_optional_name_key_value
  parameters:
  - name: d
    value:
      name: a
  result: a
- name: test_load_or_create_model_non_existing_file
  short_name: _non_existing_file
  target:
    name: load_or_create_model
  parameters:
  - name: file_path
    value: !testscribe/expression 'pathlib.Path("foo")'
  - name: full_module_name
    value: a.b
  result: !testscribe/object
    type: testscribe.model_type.AllTests
    repr: AllTests(tests=[], module='a.b', name_to_index={})
- name: test_load_or_create_model_existing_file
  short_name: _existing_file
  target:
    name: load_or_create_model
  parameters:
  - name: file_path
    value: !testscribe/expression 'fixture.helper.get_test_result_path().joinpath("service_call.tscribe")'
  - name: full_module_name
    value: a.b
  result: !testscribe/object
    type: testscribe.model_type.AllTests
    repr: 'AllTests(tests=[TestModel(name=''test_simple_gen'', short_name=''simple_gen'',
      description=''integration test'', target_func_name=''gen_name'', target_class_name='''',
      init_parameters=NamedValues([]), parameters=NamedValues([(''service'', m_service),
      (''keyword'', ''a''), (''start_number'', 1)]), exception=None, result=''{"name":
      "b", "number": 5}'', mocks=[MockModel(name=''m_service'', spec_str=''test_data.service.Service'',
      calls=[MockCallModel(name=''search_a_name'', parameters=NamedValues([(''keyword'',
      ''key: a'')]), return_value=''b''), MockCallModel(name=''search_a_number'',
      parameters=NamedValues([(''seed_number'', 1)]), return_value=2), MockCallModel(name=''search_a_number'',
      parameters=NamedValues([(''seed_number'', 2)]), return_value=3)], attributes={})],
      patches=[])], module=''test_data.service_call'', name_to_index={''test_simple_gen'':
      0})'
- name: test_load_patches
  short_name: _
  target:
    name: load_patches
  parameters:
  - name: d
    value:
      patches:
      - target: a
        replacement: 1
      - target: b
        replacement: 2
  result:
  - !testscribe/object
    type: testscribe.model_type.PatchModel
    repr: PatchModel(target='a', replacement=1)
  - !testscribe/object
    type: testscribe.model_type.PatchModel
    repr: PatchModel(target='b', replacement=2)
- name: test_load_patches_no_patch
  short_name: _no_patch
  target:
    name: load_patches
  parameters:
  - name: d
    value: {}
  result: []
- name: test_load_required_name_key_value_name_key_is_required
  short_name: _name_key_is_required
  target:
    name: load_required_name_key_value
  parameters:
  - name: d
    value: {}
  exception:
    type: KeyError
    message: '''name'''
- name: test_load_required_name_key_value
  short_name: _
  target:
    name: load_required_name_key_value
  parameters:
  - name: d
    value:
      name: a
  result: a
- name: test_load_result
  short_name: _
  target:
    name: load_result
  parameters:
  - name: d
    value:
      result: 1
  result: 1
- name: test_load_result_default
  short_name: _default
  target:
    name: load_result
  parameters:
  - name: d
    value: {}
  result: null
- name: test_load_scribe_file
  short_name: _
  target:
    name: load_scribe_file
  parameters:
  - name: scribe_file
    value: !testscribe/expression 'fixture.helper.get_test_data_root_path().joinpath("result").joinpath("service_call.tscribe")'
  result: !testscribe/object
    type: testscribe.model_type.AllTests
    repr: 'AllTests(tests=[TestModel(name=''test_simple_gen'', short_name=''simple_gen'',
      description=''integration test'', target_func_name=''gen_name'', target_class_name='''',
      init_parameters=NamedValues([]), parameters=NamedValues([(''service'', m_service),
      (''keyword'', ''a''), (''start_number'', 1)]), exception=None, result=''{"name":
      "b", "number": 5}'', mocks=[MockModel(name=''m_service'', spec_str=''test_data.service.Service'',
      calls=[MockCallModel(name=''search_a_name'', parameters=NamedValues([(''keyword'',
      ''key: a'')]), return_value=''b''), MockCallModel(name=''search_a_number'',
      parameters=NamedValues([(''seed_number'', 1)]), return_value=2), MockCallModel(name=''search_a_number'',
      parameters=NamedValues([(''seed_number'', 2)]), return_value=3)], attributes={})],
      patches=[])], module=''test_data.service_call'', name_to_index={''test_simple_gen'':
      0})'
- name: test_load_short_name
  short_name: _
  target:
    name: load_short_name
  parameters:
  - name: d
    value:
      short_name: a
  result: a
- name: test_load_short_name_short_name_is_required
  short_name: _short_name_is_required
  target:
    name: load_short_name
  parameters:
  - name: d
    value: {}
  exception:
    type: KeyError
    message: '''short_name'''
- name: test_load_target_target_key_is_required
  short_name: _target_key_is_required
  target:
    name: load_target
  parameters:
  - name: d
    value: {}
  exception:
    type: KeyError
    message: '''target'''
- name: test_load_target
  short_name: _
  target:
    name: load_target
  parameters:
  - name: d
    value:
      target:
        name: a
        class_name: c
  result: !!python/tuple
  - a
  - c
- name: test_load_target_class_name_no_class
  short_name: _no_class
  target:
    name: load_target_class_name
  parameters:
  - name: d
    value: {}
  result: ''
- name: test_load_target_class_name_has_class
  short_name: _has_class
  target:
    name: load_target_class_name
  parameters:
  - name: d
    value:
      class_name: a
  result: a
- name: test_load_test
  short_name: _
  target:
    name: load_test
  parameters:
  - name: d
    value:
      name: a
      short_name: b
      target:
        name: c
      init_parameters:
      - name: p
        value: 1
      parameters:
      - value: 2
  result: !testscribe/object
    type: testscribe.model_type.TestModel
    repr: TestModel(name='a', short_name='b', description='', target_func_name='c',
      target_class_name='', init_parameters=NamedValues([('p', 1)]), parameters=NamedValues([('',
      2)]), exception=None, result=None, mocks=[], patches=[])
- name: test_load_test_description_default
  short_name: _default
  target:
    name: load_test_description
  parameters:
  - name: d
    value: {}
  result: ''
- name: test_load_test_description_has_description
  short_name: _has_description
  target:
    name: load_test_description
  parameters:
  - name: d
    value:
      description: a
  result: a
