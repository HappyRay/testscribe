format_version: 1
module: wrapper.eval_expression_wrapper
tests:
- name: test_contain_mock_proxy_wrapper
  short_name: _
  target:
    name: contain_mock_proxy_wrapper
  parameters: []
  result: true
  patches:
  - target: testscribe.global_var.g_mock_name_counter
    replacement: !testscribe/expression 'collections.Counter(testscribe.global_var.g_mock_name_counter)'
  - target: testscribe.global_var.g_name_mock_dict
    replacement: {}
- name: test_process_complex_value_wrapper_mixed_m_function_complex_obj
  short_name: _
  target:
    name: process_complex_value_wrapper_mixed_m_function_complex_obj
  parameters: []
  result: !testscribe/object
    type: test_data.simple.C
    members:
      a: 1
  patches:
  - target: testscribe.global_var.g_mock_name_counter
    replacement: !testscribe/expression 'collections.Counter(testscribe.global_var.g_mock_name_counter)'
  - target: testscribe.global_var.g_name_mock_dict
    replacement: {}
- name: test_process_mock_marker_wrapper_list_two_items
  short_name: _list_two_items
  target:
    name: process_mock_marker_wrapper
  parameters:
  - name: t
    value: !testscribe/expression 'typing.List[test_data.simple.C]'
  - name: v
    value: !testscribe/expression '[testscribe.api.mock_api.m, testscribe.api.mock_api.m]'
  result:
  - 1
  - 2
  patches:
  - target: testscribe.eval_expression.MockProxy
    replacement: !testscribe/mock 'm_mock_proxy'
  mocks:
  - name: m_mock_proxy
    spec: testscribe.mock_proxy.MockProxy
    calls:
    - parameters:
      - name: spec
        value: !testscribe/callable
          name: C
          module: test_data.simple
      return: 1
    - parameters:
      - name: spec
        value: !testscribe/callable
          name: C
          module: test_data.simple
      return: 2
- name: test_process_mock_marker_wrapper_tuple
  short_name: _tuple
  target:
    name: process_mock_marker_wrapper
  parameters:
  - name: t
    value: !testscribe/expression 'typing.Tuple[int, test_data.simple.C]'
  - name: v
    value: !testscribe/expression '(1, testscribe.api.mock_api.m)'
  result: !!python/tuple
  - 1
  - 2
  patches:
  - target: testscribe.eval_expression.MockProxy
    replacement: !testscribe/mock 'm_mock_proxy'
  mocks:
  - name: m_mock_proxy
    spec: testscribe.mock_proxy.MockProxy
    calls:
    - parameters:
      - name: spec
        value: !testscribe/callable
          name: C
          module: test_data.simple
      return: 2
- name: test_process_mock_marker_wrapper_tuple_with_ellipsis
  short_name: _tuple_with_ellipsis
  target:
    name: process_mock_marker_wrapper
  parameters:
  - name: t
    value: !testscribe/expression 'typing.Tuple[test_data.simple.C, ...]'
  - name: v
    value: !testscribe/expression '(testscribe.api.mock_api.m, testscribe.api.mock_api.m)'
  result: !!python/tuple
  - 1
  - 2
  patches:
  - target: testscribe.eval_expression.MockProxy
    replacement: !testscribe/mock 'm_mock_proxy'
  mocks:
  - name: m_mock_proxy
    spec: testscribe.mock_proxy.MockProxy
    calls:
    - parameters:
      - name: spec
        value: !testscribe/callable
          name: C
          module: test_data.simple
      return: 1
    - parameters:
      - name: spec
        value: !testscribe/callable
          name: C
          module: test_data.simple
      return: 2
- name: test_process_mock_marker_wrapper_dict
  short_name: _dict
  target:
    name: process_mock_marker_wrapper
  parameters:
  - name: t
    value: !testscribe/expression 'typing.Dict[str, test_data.simple.C]'
  - name: v
    value: !testscribe/expression '{''a'': testscribe.api.mock_api.m, ''b'': testscribe.api.mock_api.m}'
  result:
    a: 1
    b: 2
  patches:
  - target: testscribe.eval_expression.MockProxy
    replacement: !testscribe/mock 'm_mock_proxy'
  mocks:
  - name: m_mock_proxy
    spec: testscribe.mock_proxy.MockProxy
    calls:
    - parameters:
      - name: spec
        value: !testscribe/callable
          name: C
          module: test_data.simple
      return: 1
    - parameters:
      - name: spec
        value: !testscribe/callable
          name: C
          module: test_data.simple
      return: 2
- name: test_process_mock_marker_wrapper_optional_class
  short_name: _optional_class
  description: put the optional class type in a list to avoid the tool trying to create
    a mock before the function is executed.
  target:
    name: process_mock_marker_wrapper
  parameters:
  - name: t
    value: !testscribe/expression 'typing.List[typing.Optional[test_data.simple.C]]'
  - name: v
    value: !testscribe/expression '[testscribe.api.mock_api.m]'
  result:
  - 1
  patches:
  - target: testscribe.eval_expression.MockProxy
    replacement: !testscribe/mock 'm_mock_proxy'
  mocks:
  - name: m_mock_proxy
    spec: testscribe.mock_proxy.MockProxy
    calls:
    - parameters:
      - name: spec
        value: !testscribe/callable
          name: C
          module: test_data.simple
      return: 1
- name: test_wrap_input_value_wrapper_complex_value
  short_name: _
  target:
    name: wrap_input_value_wrapper_complex_value
  parameters:
  - name: value
    value: !testscribe/expression 'test_data.simple.C(1)'
  result: !testscribe/object
    type: test_data.simple.C
    members:
      a: 1
